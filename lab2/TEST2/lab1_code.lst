
lab1_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000166  000001da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000166  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000020c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000096e  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fe  00000000  00000000  00000bd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001d0  00000000  00000000  000013d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000015a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000371  00000000  00000000  000015c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000120  00000000  00000000  00001939  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001a59  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  7c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  80:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  84:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  88:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 52 00 	call	0xa4	; 0xa4 <main>
  9c:	0c 94 b1 00 	jmp	0x162	; 0x162 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <main>:

#include <avr/io.h>

int main()
{
	DDRA  = 0xFF;   //set port A to all outputs
  a4:	8f ef       	ldi	r24, 0xFF	; 255
  a6:	8a bb       	out	0x1a, r24	; 26
	DDRB  = 0xF0;   //set port bits 4-7 B as outputs
  a8:	90 ef       	ldi	r25, 0xF0	; 240
  aa:	97 bb       	out	0x17, r25	; 23
	DDRD  = 0x00;   //set port D all inputs 
  ac:	11 ba       	out	0x11, r1	; 17
	PORTD = 0xFF;   //set port D all pullups 
  ae:	82 bb       	out	0x12, r24	; 18
	PORTA = 0xFF;   //set port A to all ones  (off, active low)
  b0:	8b bb       	out	0x1b, r24	; 27
		//push button determines which segment is on
		if (PIND==0b11111110){
PORTA = 0x00; 
			PORTB = 0x00;_delay_ms(50);}
		if (PIND==0b11111101){PORTA = 0x00; 
			PORTB = 0x10;_delay_ms(50);}
  b2:	30 e1       	ldi	r19, 0x10	; 16
		if (PIND==0b11111011){PORTA = 0x00; 
			PORTB = 0x20;_delay_ms(50);}
  b4:	20 e2       	ldi	r18, 0x20	; 32
		if (PIND==0b11110111){PORTA = 0x00; 
			PORTB = 0x30;_delay_ms(50);}
  b6:	90 e3       	ldi	r25, 0x30	; 48
		if (PIND==0b11101111)
		{PORTA = 0x00; 
			PORTB = 0x40;
  b8:	40 e4       	ldi	r20, 0x40	; 64
  ba:	0c c0       	rjmp	.+24     	; 0xd4 <main+0x30>

		//push button determines which segment is on
		if (PIND==0b11111110){
PORTA = 0x00; 
			PORTB = 0x00;_delay_ms(50);}
		if (PIND==0b11111101){PORTA = 0x00; 
  bc:	80 b3       	in	r24, 0x10	; 16
  be:	8d 3f       	cpi	r24, 0xFD	; 253
  c0:	d1 f0       	breq	.+52     	; 0xf6 <main+0x52>
			PORTB = 0x10;_delay_ms(50);}
		if (PIND==0b11111011){PORTA = 0x00; 
  c2:	80 b3       	in	r24, 0x10	; 16
  c4:	8b 3f       	cpi	r24, 0xFB	; 251
  c6:	29 f1       	breq	.+74     	; 0x112 <main+0x6e>
			PORTB = 0x20;_delay_ms(50);}
		if (PIND==0b11110111){PORTA = 0x00; 
  c8:	80 b3       	in	r24, 0x10	; 16
  ca:	87 3f       	cpi	r24, 0xF7	; 247
  cc:	81 f1       	breq	.+96     	; 0x12e <main+0x8a>
			PORTB = 0x30;_delay_ms(50);}
		if (PIND==0b11101111)
  ce:	80 b3       	in	r24, 0x10	; 16
  d0:	8f 3e       	cpi	r24, 0xEF	; 239
  d2:	d9 f1       	breq	.+118    	; 0x14a <main+0xa6>
		//  PORTB = 0x20; //colon, indicator leds  on
		//  PORTB = 0x30; //digit two   on 
		//PORTB = 0x40; //digit three on 

		//push button determines which segment is on
		if (PIND==0b11111110){
  d4:	80 b3       	in	r24, 0x10	; 16
  d6:	8e 3f       	cpi	r24, 0xFE	; 254
  d8:	89 f7       	brne	.-30     	; 0xbc <main+0x18>
PORTA = 0x00; 
  da:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x00;_delay_ms(50);}
  dc:	18 ba       	out	0x18, r1	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	5f ef       	ldi	r21, 0xFF	; 255
  e0:	60 e7       	ldi	r22, 0x70	; 112
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	51 50       	subi	r21, 0x01	; 1
  e6:	60 40       	sbci	r22, 0x00	; 0
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <main+0x40>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x4a>
  ee:	00 00       	nop
		if (PIND==0b11111101){PORTA = 0x00; 
  f0:	80 b3       	in	r24, 0x10	; 16
  f2:	8d 3f       	cpi	r24, 0xFD	; 253
  f4:	31 f7       	brne	.-52     	; 0xc2 <main+0x1e>
  f6:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x10;_delay_ms(50);}
  f8:	38 bb       	out	0x18, r19	; 24
  fa:	5f ef       	ldi	r21, 0xFF	; 255
  fc:	60 e7       	ldi	r22, 0x70	; 112
  fe:	82 e0       	ldi	r24, 0x02	; 2
 100:	51 50       	subi	r21, 0x01	; 1
 102:	60 40       	sbci	r22, 0x00	; 0
 104:	80 40       	sbci	r24, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x5c>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x66>
 10a:	00 00       	nop
		if (PIND==0b11111011){PORTA = 0x00; 
 10c:	80 b3       	in	r24, 0x10	; 16
 10e:	8b 3f       	cpi	r24, 0xFB	; 251
 110:	d9 f6       	brne	.-74     	; 0xc8 <main+0x24>
 112:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x20;_delay_ms(50);}
 114:	28 bb       	out	0x18, r18	; 24
 116:	5f ef       	ldi	r21, 0xFF	; 255
 118:	60 e7       	ldi	r22, 0x70	; 112
 11a:	82 e0       	ldi	r24, 0x02	; 2
 11c:	51 50       	subi	r21, 0x01	; 1
 11e:	60 40       	sbci	r22, 0x00	; 0
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <main+0x78>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x82>
 126:	00 00       	nop
		if (PIND==0b11110111){PORTA = 0x00; 
 128:	80 b3       	in	r24, 0x10	; 16
 12a:	87 3f       	cpi	r24, 0xF7	; 247
 12c:	81 f6       	brne	.-96     	; 0xce <main+0x2a>
 12e:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x30;_delay_ms(50);}
 130:	98 bb       	out	0x18, r25	; 24
 132:	5f ef       	ldi	r21, 0xFF	; 255
 134:	60 e7       	ldi	r22, 0x70	; 112
 136:	82 e0       	ldi	r24, 0x02	; 2
 138:	51 50       	subi	r21, 0x01	; 1
 13a:	60 40       	sbci	r22, 0x00	; 0
 13c:	80 40       	sbci	r24, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <main+0x94>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0x9e>
 142:	00 00       	nop
		if (PIND==0b11101111)
 144:	80 b3       	in	r24, 0x10	; 16
 146:	8f 3e       	cpi	r24, 0xEF	; 239
 148:	29 f6       	brne	.-118    	; 0xd4 <main+0x30>
		{PORTA = 0x00; 
 14a:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x40;
 14c:	48 bb       	out	0x18, r20	; 24
 14e:	5f ef       	ldi	r21, 0xFF	; 255
 150:	60 e7       	ldi	r22, 0x70	; 112
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	51 50       	subi	r21, 0x01	; 1
 156:	60 40       	sbci	r22, 0x00	; 0
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <main+0xb0>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0xba>
 15e:	00 00       	nop
 160:	b9 cf       	rjmp	.-142    	; 0xd4 <main+0x30>

00000162 <_exit>:
 162:	f8 94       	cli

00000164 <__stop_program>:
 164:	ff cf       	rjmp	.-2      	; 0x164 <__stop_program>
